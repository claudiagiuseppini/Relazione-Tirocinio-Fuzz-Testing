@book{ref1,
  author    = {Mathias Payer},
  title     = {Software Security: Principles, Policies, and Protection},
}

@inproceedings{ref2,
  author    = {Sergey Bratus and Michael E. Locasto and Meredith L. Patterson and Len Sassman and Anna Shubina},
  title     = {Exploit programming: From buffer overflows to "weird machines" and theory of computation},
  booktitle = {Usenix ;login:},
  year      = {2011},
}

@misc{ref3,
  author = {Grace Hopper},
  title  = {Software bug etymology},
  year   = {1947},
}

@online{ref4,
  author = {Michael Hicks},
  title  = {What is memory safety?},
  year   = {2014},
  url    = {http://www.pl-enthusiast.net/2014/07/21/memory-safety/},
  note   = {Accessed: July 21, 2014},
}

@book{ref5,
  author = {John C. Mitchell},
  title  = {Concepts in Programming Languages},
  year   = {2002},
}

@inproceedings{ref6,
  author    = {A. Souag and C. Salinesi and R. Mazo and I. Comyn-Wattiau},
  title     = {A Security Ontology for Security Requirements Elicitation},
  booktitle = {ESSoS},
  year      = {2015},
}

@inproceedings{ref7,
  author    = {Konstantin Serebryany and Derek Bruening and Alexander Potapenko and Dmitry Vyukov},
  title     = {AddressSanitizer: A fast address sanity checker},
  booktitle = {USENIX Annual Technical Conference (ATC)},
  year      = {2012},
}

@online{ref8,
  author = {LLVM},
  title  = {MemorySanitizer documentation},
  url    = {https://clang.llvm.org/docs/MemorySanitizer.html},
}

@online{ref9a,
  title = {Use of uninitialized value},
  url   = {https://comp2521unsw.github.io/sanitisers-guide/glossary/use-of-uninitialized-value/},
}

@online{ref9b,
  title = {Better Uninitialized Warnings (GCC)},
  url   = {https://gcc.gnu.org/wiki/Better_Uninitialized_Warnings},
}

@misc{ref10,
  title = {Memcheck: a memory error detector},
  howpublished = {\url{https://valgrind.org/docs/memcheck2005.pdf}},
}

@inproceedings{ref11,
  author    = {A. Fioraldi and D. Maier and H. Ei√üfeldt and M. Heuse},
  title     = {AFL++ : Combining incremental steps of fuzzing research},
  booktitle = {14th USENIX Workshop on Offensive Technologies (WOOT 2020)},
  year      = {2020},
  url       = {https://www.usenix.org/conference/woot20/presentation/fioraldi},
}

@misc{ref12,
  author = {Matteo Marini and Daniele Cono D'Elia and Mathias Payer and Leonardo Querzoni},
  title  = {QMSan: Efficiently Detecting Uninitialized Memory Errors During Fuzzing},
}

@misc{ref13,
  author = {Evgeniy Stepanov and Konstantin Serebryany},
  title  = {MemorySanitizer: fast detector of C uninitialized memory use in C++},
}

@online{ref14,
  author = {Valgrind},
  title  = {Memcheck: a memory error detector (manual)},
  url    = {https://valgrind.org/docs/manual/mc-manual.html},
}

@online{ref15,
  author = {Valgrind},
  title  = {Valgrind Website},
  url    = {https://valgrind.org/},
}

@inproceedings{ref16,
  author    = {L. Szekeres and M. Payer and T. Wei and D. Song},
  title     = {SoK: Eternal war in memory},
  booktitle = {IEEE Symposium on Security and Privacy},
  year      = {2013},
  pages     = {48--62},
}

@online{ref17,
  author = {A. Zeller and R. Gopinath and M. Bohme and G. Fraser and C. Holler},
  title  = {The Fuzzing Book},
  year   = {2019},
  url    = {https://www.fuzzingbook.org/},
  note   = {[Online; accessed 25-May-2020]},
}

@online{ref18,
  author = {Google},
  title  = {Google Sanitizers Github Repository},
  url    = {https://github.com/google/sanitizers},
}

@misc{ref19,
  author = {Dokyung Song and Julian Lettner and Prabhu Rajasekaran and Yeoul Na and Stijn Volckaert and Per Larsen and Michael Franz},
  title  = {SoK: Sanitizing for Security},
}

@article{ref20,
  author  = {M. Payer},
  title   = {The fuzzing hype-train: How random testing triggers thousands of crashes},
  journal = {IEEE Security \& Privacy},
  volume  = {17},
  number  = {1},
  pages   = {78--82},
  year    = {2019},
}

@inproceedings{ref21,
  author    = {G. Klees and A. Ruef and B. Cooper and S. Wei and M. Hicks},
  title     = {Evaluating fuzz testing},
  booktitle = {Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security},
  year      = {2018},
}

@misc{ref22,
  author = {Marcel Bohme and Cristian Cadar and Abhik Roychoudhury},
  title  = {Fuzzing: Challenges and Reflections},
}

@online{ref23,
  author = {GitLab},
  title  = {Coverage-guided fuzz testing},
  url    = {https://docs.gitlab.com/ee/user/application_security/coverage_fuzzing/},
}

@online{ref24,
  author = {AFL++},
  title  = {Fuzzing library ``libafl''},
  url    = {https://aflplus.plus/libafl-book/libafl.html},
}

@online{ref25,
  title  = {OpenSC issues},
  url    = {https://github.com/OpenSC/OpenSC/issues},
}

@online{ref26,
  title  = {libucl issues},
  url    = {https://github.com/vstakhov/libucl/issues},
}

@online{ref27,
  title  = {LibreDWG issues},
  url    = {https://github.com/LibreDWG/libredwg/issues},
}

@online{ref28,
  title  = {GpAC issues},
  url    = {https://github.com/gpac/gpac/issues},
}

@inproceedings{ref29,
  author    = {Nick Stephens and John Grosen and Christopher Salls and Andrew Dutcher and Ruoyu Wang and Jacopo Corbetta and Yan Shoshitaishvili and Christopher Kruegel and Giovanni Vigna},
  title     = {Driller: Augmenting Fuzzing Through Selective Symbolic Execution},
  booktitle = {Network and Distributed System Security Symposium (NDSS)},
  year      = {2016},
}

@online{ref30,
  title  = {Documentation for OSS-Fuzz},
  url    = {https://google.github.io/oss-fuzz/},
}

@online{ref31,
  title  = {OSS-Fuzz Introspector},
  url    = {https://introspector.oss-fuzz.com/},
}

@online{ref32,
  title  = {Forbes, Costly Code: The Price Of Software Errors},
  url    = {https://www.forbes.com/councils/forbestechcouncil/2023/12/26/costly-code-the-price-of-software-errors/},
}